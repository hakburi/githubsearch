//
//  GithubSearch-Share.xcconfig
//  GithubSearch
//
//  Created by SungHak Jung on 2022/01/26.
//  Copyright Â© 2022 GenithLabs. All rights reserved.
//

// Configuration settings file format documentation can be found at:
// https://help.apple.com/xcode/#/dev745c5c974

//
// GithubSearch-Shared.xcconfig
//
// Generated by BuildSettingExtractor on 2022/01/26
// https://github.com/dempseyatgithub/BuildSettingExtractor
//

// Primary App Icon Set Name
//
// Name of an app icon set for the target's default app icon. The contents will be merged
// into the `Info.plist`.

ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon



// Global Accent Color Name
//
// The name of a color resource to use as a the target's accent color, used as the
// default tint color on iOS and watchOS, and accent color on macOS.

ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME = AccentColor



// Code Signing Style
//
// This setting specifies the method used to acquire and locate signing assets. Choose
// `Automatic` to let Xcode automatically create and update profiles, app IDs, and
// certificates. Choose `Manual` to create and update these yourself on the developer
// website.

CODE_SIGN_STYLE = Automatic



// Current Project Version
//
// This setting defines the current version of the project. The value must be a integer
// or floating point number, such as `57` or `365.8`.

CURRENT_PROJECT_VERSION = 1



// Development Assets
//
// Files and directories used only for development. Archive and install builds will
// exclude this content.

DEVELOPMENT_ASSET_PATHS = "GithubSearch/Preview Content"



// Enable Previews
//
// If enabled, the product will be built with options appropriate for supporting
// previews.

ENABLE_PREVIEWS = YES



// Generate Info.plist File
//
// If enabled, automatically generate an Info.plist file with content from build
// settings.

GENERATE_INFOPLIST_FILE = YES



// Application Scene Manifest (Generation)
//
// Generate a UIAppplicationSceneManifest entry for a multi-window application into the
// Info.plist.

INFOPLIST_KEY_UIApplicationSceneManifest_Generation = YES



// Supports Indirect Events
//
// A Boolean value indicating that the app generally supports indirect input mechanisms.

INFOPLIST_KEY_UIApplicationSupportsIndirectInputEvents = YES



// Launch Screen (Generation)
//
// Generate an empty UILaunchScreen dictionary into the Info.plist.

INFOPLIST_KEY_UILaunchScreen_Generation = YES



// Supported Interface Orientations (iPad)
//
// The interface orientations supported by your app.

INFOPLIST_KEY_UISupportedInterfaceOrientations_iPad = UIInterfaceOrientationPortrait UIInterfaceOrientationPortraitUpsideDown UIInterfaceOrientationLandscapeLeft UIInterfaceOrientationLandscapeRight



// Supported Interface Orientations (iPhone)
//
// The interface orientations supported by your app.

INFOPLIST_KEY_UISupportedInterfaceOrientations_iPhone = UIInterfaceOrientationPortrait UIInterfaceOrientationLandscapeLeft UIInterfaceOrientationLandscapeRight



// Runpath Search Paths
//
// This is a list of paths to be added to the `runpath` search path list for the image
// being created. At runtime, `dyld` uses the `runpath` when searching for dylibs whose
// load path begins with `@rpath/`. See [Dynamic Library Programming
// Topics](https://developer.apple.com/library/content/documentation/DeveloperTools/Conceptual/DynamicLibraries/000-Introduction/Introduction.html).

LD_RUNPATH_SEARCH_PATHS = $(inherited) @executable_path/Frameworks



// Marketing Version
//
// This setting defines the user-visible version of the project. The value corresponds to
// the `CFBundleShortVersionString` key in your app's Info.plist.

MARKETING_VERSION = 1.0



// Product Bundle Identifier
//
// A string that uniquely identifies the bundle. The string should be in reverse DNS
// format using only alphanumeric characters (`A-Z`, `a-z`, `0-9`), the dot (`.`), and
// the hyphen (`-`). This value is used as the `CFBundleIdentifier` in the `Info.plist`
// of the built bundle.

PRODUCT_BUNDLE_IDENTIFIER = com.genithlabs.githubsearch



// Product Name
//
// This is the basename of the product generated by the target.

PRODUCT_NAME = $(TARGET_NAME)



// Use Compiler to Extract Swift Strings
//
// When enabled, the Swift compiler will be used to extract Swift string literal and
// interpolation `LocalizedStringKey` and `LocalizationKey` types during localization
// export.

SWIFT_EMIT_LOC_STRINGS = YES



// Swift Language Version
//
//

SWIFT_VERSION = 5



// Targeted Device Families
//
// The build system uses the selected device to set the correct value for the
// `UIDeviceFamily` key it adds to the target's `Info.plist` file. This also drives the
// --target-device flag to actool, which determines the idioms selected during catalog
// compilation.

TARGETED_DEVICE_FAMILY = 1,2
